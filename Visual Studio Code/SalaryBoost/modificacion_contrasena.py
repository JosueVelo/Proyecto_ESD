import streamlit as st
import re
from sqlalchemy import text

def modificar_contrasena(engine_empleados, engine_supervisores):
    st.header("üîí Modificar Contrase√±a")

    user_type = st.selectbox("Seleccione su tipo de usuario:", ["Empleado", "Supervisor"])
    email = st.text_input("Ingrese su correo electr√≥nico (Gmail)", type="default")
    current_password = st.text_input("Ingrese su contrase√±a actual", type="password")
    new_password = st.text_input("Nueva Contrase√±a", type="password")
    confirm_password = st.text_input("Confirme su Nueva Contrase√±a", type="password")

    # Funci√≥n para validar la contrase√±a
    def validar_contrasena(password):
        if len(password) < 9:
            return "La contrase√±a debe tener al menos 9 caracteres."
        if not re.search(r"[!@#$%^&*(),.?\":{}|<>]", password):
            return "La contrase√±a debe contener al menos un car√°cter especial."
        return None  # Contrase√±a v√°lida

    if st.button("üõ°Ô∏è Cambiar Contrase√±a"):
        # Verificar si las contrase√±as coinciden
        if new_password != confirm_password:
            st.warning("‚ö†Ô∏è Las contrase√±as no coinciden. Por favor, intente de nuevo.")
        else:
            # Validar la nueva contrase√±a
            error = validar_contrasena(new_password)
            if error:
                st.warning(f"‚ö†Ô∏è {error}")  # Mostrar el error si la validaci√≥n falla
            else:
                try:
                    if user_type == "Empleado":
                        # Verificar si el correo y la contrase√±a actual son correctos para Empleado
                        with engine_empleados.connect() as conn:
                            verify_query = text("""
                                SELECT COUNT(*)
                                FROM "Employees"
                                WHERE "Email" = :email AND "Password" = crypt(:current_password, "Password")
                            """)
                            result = conn.execute(verify_query, {
                                "email": email,
                                "current_password": current_password
                            })
                            count = result.scalar()

                            if count > 0:
                                # Actualizar la contrase√±a en la base de datos
                                update_query = text("""
                                    UPDATE "Employees"
                                    SET "Password" = crypt(:new_password, gen_salt('bf'))
                                    WHERE "Email" = :email
                                """)
                                conn.execute(update_query, {
                                    "new_password": new_password,
                                    "email": email
                                })
                                conn.commit()  # Guardar cambios en la base de datos
                                st.success("‚úÖ La contrase√±a ha sido actualizada exitosamente.")
                            else:
                                st.warning("‚ö†Ô∏è Correo electr√≥nico o contrase√±a actual incorrectos.")

                    elif user_type == "Supervisor":
                        # Verificar si el correo y la contrase√±a actual son correctos para Supervisor
                        with engine_supervisores.connect() as conn:
                            verify_query = text("""
                                SELECT COUNT(*)
                                FROM "Supervisors"
                                WHERE "Email" = :email AND "Password" = crypt(:current_password, "Password")
                            """)
                            result = conn.execute(verify_query, {
                                "email": email,
                                "current_password": current_password
                            })
                            count = result.scalar()

                            if count > 0:
                                # Actualizar la contrase√±a en la base de datos
                                update_query = text("""
                                    UPDATE "Supervisors"
                                    SET "Password" = crypt(:new_password, gen_salt('bf'))
                                    WHERE "Email" = :email
                                """)
                                conn.execute(update_query, {
                                    "new_password": new_password,
                                    "email": email
                                })
                                conn.commit()  # Guardar cambios en la base de datos
                                st.success("‚úÖ La contrase√±a ha sido actualizada exitosamente.")
                            else:
                                st.warning("‚ö†Ô∏è Correo electr√≥nico o contrase√±a actual incorrectos.")

                except Exception as e:
                    st.error(f"üö® Ocurri√≥ un error al modificar la contrase√±a: {str(e)}")
